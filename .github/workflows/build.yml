name: Build

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

defaults:
  run:
    shell: bash

permissions: read-all

jobs:
  build:
    name: Test with ${{ matrix.go-version }} on ${{ matrix.vm-os }}
    runs-on: ${{ matrix.vm-os }}
    env:
      CI_REPORT: ${{ matrix.vm-os == 'ubuntu-20.04' && matrix.go-version == '1.18.10' }}
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        vm-os: [
          ubuntu-20.04,
          macos-13,
          macos-14,
          windows-2022
        ]
        go-version: [
          1.18.10,
          1.19.13,
          1.20.14,
          1.21.8,
          1.22.1,
        ]
    permissions:
      contents: read
    # Steps to execute
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Go Build
        run: |
          export
          git status
          go version
          go mod download
          make --version
      - name: Test
        run: |
          make ci
          make build
      - name: Upload Coverage Reports to Codecov
        if: ${{ fromJSON(env.CI_REPORT) }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.txt
      - name: Upload Coverage Reports to Codacy
        if: ${{ fromJSON(env.CI_REPORT) }}
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run:
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report --force-coverage-parser go -r coverage.txt
      - name: Analyze
        if: ${{ runner.os == 'Linux' }}
        run: |
          # tokei -- count
          wget -cqL https://github.com/XAMPPRocky/tokei/releases/download/v12.1.2/tokei-i686-unknown-linux-musl.tar.gz -O tokei.tgz
          tar zxf tokei.tgz tokei && chmod +x tokei && $SUDO mv tokei /usr/local/bin && rm tokei.tgz
          echo "=== Tokei Result ==="
          tokei
          # revive -- lint
          wget -cqL https://github.com/mgechev/revive/releases/download/v1.2.4/revive_1.2.4_Linux_x86_64.tar.gz -O revive.tgz
          tar zxf revive.tgz revive && chmod +x revive && $SUDO mv revive /usr/local/bin && rm revive.tgz
          wget -cqL https://bitbucket.org/ai69/common/raw/master/revive.toml -O revive.toml
          echo "=== Revive Result ==="
          revive -config revive.toml -formatter friendly ./...
